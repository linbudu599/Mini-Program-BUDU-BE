{"version":3,"sources":["static/logo.png","components/Modal/index.tsx","pages/Info/index.tsx","components/Header/index.tsx","pages/index.tsx","App.tsx","index.tsx"],"names":["module","exports","Text","ModalCom","visible","title","hide","link","mdTag","isImg","console","log","handleCopy","selector","document","querySelector","select","execCommand","message","success","okText","cancelText","destroyOnClose","onOk","onCancel","gutter","span","ellipsis","style","width","type","id","value","size","icon","onClick","marginRight","InfoComponent","strong","offset","percent","status","strokeColor","strokeWidth","Header","HeaderCom","className","src","logo","alt","Content","Footer","Index","origin","useState","customFileList","setCustomFileList","showModal","setShowModal","setLink","setIsImg","customeName","setCustomeName","onChange","a","file","fileList","response","url","startsWith","padding","background","minHeight","placeholder","disabled","e","target","listType","action","accept","method","data","beforeUpload","error","transformFile","Info","Modal","textAlign","App","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.78299ed8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c530db0f.png\";","import React, { useState } from \"react\";\r\n\r\nimport { Modal, Col, Row, Typography, Button, message, Input } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\n\r\ninterface IModalProps {\r\n  visible: boolean;\r\n  title: string;\r\n  link: string;\r\n  mdTag: string;\r\n  hide: () => void;\r\n  isImg: boolean;\r\n}\r\n\r\nconst ModalCom: React.FC<IModalProps> = ({\r\n  visible,\r\n  title,\r\n  hide,\r\n  link,\r\n  mdTag,\r\n  isImg\r\n}) => {\r\n  console.log(isImg);\r\n\r\n  const handleCopy = (selector: string): void => {\r\n    const copyDOM = document.querySelector(selector)!; //需要复制文字的节点\r\n    // @ts-ignore\r\n    copyDOM.select();\r\n    document.execCommand(\"Copy\");\r\n    message.success(\"复制好咯\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        visible={visible}\r\n        title={title}\r\n        okText=\"晓得咯\"\r\n        cancelText=\"爬！\"\r\n        destroyOnClose={true}\r\n        onOk={() => {\r\n          hide();\r\n        }}\r\n        onCancel={() => {\r\n          hide();\r\n        }}\r\n      >\r\n        <Row gutter={[0, 24]}>\r\n          <Col span={20}>\r\n            <Text ellipsis style={{ width: \"100%\" }}>\r\n              <Input\r\n                type=\"text\"\r\n                id=\"link\"\r\n                value={link}\r\n                style={{ width: \"95%\" }}\r\n              />\r\n            </Text>\r\n          </Col>\r\n          <Col span={4}>\r\n            <Button\r\n              size=\"small\"\r\n              icon=\"copy\"\r\n              onClick={() => {\r\n                handleCopy(\"#link\");\r\n              }}\r\n            >\r\n              复制链接\r\n            </Button>\r\n          </Col>\r\n          {isImg ? (\r\n            <>\r\n              <Col span={16}>\r\n                <Text ellipsis style={{ width: \"100%\" }}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    id=\"mdtag\"\r\n                    value={mdTag}\r\n                    style={{ width: \"90%\" }}\r\n                  />\r\n                </Text>\r\n              </Col>\r\n\r\n              <Col span={4} style={{ marginRight: \"20px\" }}>\r\n                <Button\r\n                  size=\"small\"\r\n                  icon=\"copy\"\r\n                  onClick={() => {\r\n                    handleCopy(\"#mdtag\");\r\n                  }}\r\n                >\r\n                  复制MarkDown链接\r\n                </Button>\r\n              </Col>\r\n            </>\r\n          ) : null}\r\n        </Row>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalCom;\r\n","import React from \"react\";\r\n\r\nimport { Col, Row, Typography, Progress } from \"antd\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst InfoComponent: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Text>\r\n          当前Bucket：<Text strong>linbudu-oss-store</Text>\r\n        </Text>\r\n        {/* TODO: No <br /> plz，use Gutter */}\r\n        <br />\r\n        <br />\r\n        <Col span={3}>使用进度:</Col>\r\n        <Col span={18} offset={1}>\r\n          <Progress\r\n            percent={50}\r\n            status=\"active\"\r\n            strokeColor={{\r\n              \"0%\": \"#87d068\",\r\n              \"100%\": \"#108ee9\"\r\n            }}\r\n            strokeWidth={15}\r\n          />\r\n        </Col>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Text>其他可用Bucket使用情况</Text>\r\n        <br />\r\n        <br />\r\n        <Col span={3}>Bucket1</Col>\r\n        <Col span={18} offset={1}>\r\n          <Progress percent={50} status=\"active\" strokeWidth={15} />\r\n        </Col>\r\n        <br />\r\n        <br />\r\n        <Col span={3}>Bucket2</Col>\r\n        <Col span={18} offset={1}>\r\n          <Progress percent={50} status=\"active\" strokeWidth={15} />\r\n        </Col>\r\n        <br />\r\n        <br />\r\n        <Col span={3}>Bucket3</Col>\r\n        <Col span={18} offset={1}>\r\n          <Progress percent={80} status=\"normal\" strokeWidth={15} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfoComponent;\r\n","import React from \"react\";\r\nimport { Layout, Typography } from \"antd\";\r\nimport logo from \"../../static/logo.png\";\r\n\r\nconst { Header } = Layout;\r\nconst { Text } = Typography;\r\n\r\nconst HeaderCom: React.FC = () => {\r\n  return (\r\n    <Header>\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"\" />\r\n        <Text>\r\n          Version 0.1.1 目前支持：\r\n          单文件上传（为图片时自动生成md链接）以及压缩包上传\r\n        </Text>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default HeaderCom;\r\n","import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport {\r\n  Layout,\r\n  Col,\r\n  Row,\r\n  Upload,\r\n  Button,\r\n  Icon,\r\n  Input,\r\n  message,\r\n  Typography\r\n} from \"antd\";\r\n\r\nimport ModalCom from \"../components/Modal\";\r\nimport InfoComponent from \"./Info\";\r\nimport HeaderCom from \"../components/Header\";\r\nimport { RcFile, UploadChangeParam } from \"antd/es/Upload\";\r\nimport { UploadFile } from \"antd/lib/upload/interface\";\r\n\r\nconst { Text } = Typography;\r\nconst { Content, Footer } = Layout;\r\n\r\n// TODO: refractor upload logic\r\n// const header = { headers: { \"Content-Type\": \"multipart/form-data\" } };\r\n\r\nconst Index = () => {\r\n  const [customFileList, setCustomFileList] = useState<RcFile[]>([]);\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [link, setLink] = useState<string>(\"\");\r\n  const [isImg, setIsImg] = useState<boolean>(false);\r\n  const [customeName, setCustomeName] = useState<string>(\"\");\r\n\r\n  interface ICustomProps {\r\n    customeName: string;\r\n  }\r\n\r\n  const beforeUpload = (file: RcFile & ICustomProps): boolean => {\r\n    if (file.size > 100 * 1024 * 1024) {\r\n      message.error(\"啊哦，文件太大了\");\r\n      return false;\r\n    }\r\n    file.customeName = customeName;\r\n    console.log(file);\r\n    return true;\r\n  };\r\n\r\n  const onChange = async ({\r\n    file,\r\n    fileList\r\n  }: UploadChangeParam<UploadFile<any>>) => {\r\n    console.log(file, fileList);\r\n    setCustomFileList([...fileList] as RcFile[]);\r\n    if (file.status === \"done\" && file.response.url) {\r\n      message.success(\"上传成功啦\");\r\n      if (file.type.startsWith(\"image\")) {\r\n        setIsImg(true);\r\n      } else {\r\n        setIsImg(false);\r\n      }\r\n      setShowModal(true);\r\n      setLink(file.response.url);\r\n    }\r\n  };\r\n\r\n  const transform2Md = (origin: string): string => {\r\n    return `![img](${origin})`;\r\n  };\r\n\r\n  const transformFile = (file: RcFile): File => {\r\n    console.log(file);\r\n    // @ts-ignore\r\n    file.customeName = \"sss\";\r\n    return file;\r\n  };\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <HeaderCom />\r\n\r\n      <Content style={{ padding: \"0 50px\" }}>\r\n        <div style={{ background: \"#fff\", padding: 24, minHeight: 280 }}>\r\n          <Row>\r\n            <Col span={10}>\r\n              <Text>你可以为文件自定义命名，如oss.linbudu.top/budu.png。</Text>\r\n              <br />\r\n              <br />\r\n              <Text>后缀名将保持原来的值。</Text>\r\n              <br />\r\n              <br />\r\n              <Text>由于MarkDown语法原因，英文括号()会被转化，如:</Text>\r\n              <br />\r\n              <Text strong>foo(1).png -> foo-1.png</Text>\r\n              <Input\r\n                placeholder=\"后台实现研究中\"\r\n                disabled\r\n                onChange={e => {\r\n                  setCustomeName(e.target.value);\r\n                }}\r\n              />\r\n              {/* TODO: 多文件 文件夹 滚动列表 */}\r\n              <Upload\r\n                listType=\"picture\"\r\n                action=\"http://localhost:3099/upload\"\r\n                accept=\"*\"\r\n                method=\"POST\"\r\n                fileList={customFileList}\r\n                data={{ customeName }}\r\n                beforeUpload={\r\n                  (beforeUpload as unknown) as (\r\n                    file: RcFile,\r\n                    FileList: RcFile[]\r\n                  ) => boolean\r\n                }\r\n                transformFile={transformFile}\r\n                onChange={onChange}\r\n              >\r\n                <Button>\r\n                  <Icon type=\"upload\" /> Upload\r\n                </Button>\r\n              </Upload>\r\n            </Col>\r\n            <Col offset={2} span={12}>\r\n              <InfoComponent />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Content>\r\n      <ModalCom\r\n        visible={showModal}\r\n        title=\"请带哥复制链接\"\r\n        link={link}\r\n        isImg={isImg}\r\n        mdTag={transform2Md(link)}\r\n        hide={() => {\r\n          setShowModal(false);\r\n        }}\r\n      />\r\n      <Footer style={{ textAlign: \"center\" }}>Powered By ALi Cloud</Footer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React, { Component } from \"react\";\n\nimport Index from \"./pages\";\n\nimport \"./app.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Index />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}